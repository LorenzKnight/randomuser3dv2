{"ast":null,"code":"var _jsxFileName = \"/Users/lorenz/Documents/code/react/randomuser-app/src/FetchUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = `https://randomuser.me/api`;\n\nconst FetchUser = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const resp = await fetch(url);\n      const users = await resp.json();\n      setUsers(users);\n      console.log(users);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(FetchUser, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c = FetchUser;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchUser\");","map":{"version":3,"sources":["/Users/lorenz/Documents/code/react/randomuser-app/src/FetchUser.js"],"names":["React","useState","useEffect","url","FetchUser","users","setUsers","fetchUserData","resp","fetch","json","console","log","User"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,MAAMC,GAAG,GAAI,2BAAb;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,aAAa,GAAG,YAAW;AAC7B,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAACN,GAAD,CAAxB;AACA,YAAME,KAAK,GAAG,MAAMG,IAAI,CAACE,IAAL,EAApB;AACAJ,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACH,KALD;AAMH,GAPQ,CAAT;AASA,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CAjBD;;GAAMD,S;;KAAAA,S;AAmBN,eAAeS,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nconst url = `https://randomuser.me/api`\n\n\nconst FetchUser = () => {\n    const [users, setUsers] = useState([])\n\n    useEffect(() => {\n        const fetchUserData = async() => {\n            const resp = await fetch(url)\n            const users = await resp.json()\n            setUsers(users)\n            console.log(users);\n        }\n    })\n\n    return (\n        <>\n            <h1>User Component</h1>\n        </>\n    )\n}\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}